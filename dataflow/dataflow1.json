{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "coursera_pbp",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "coursera_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "window1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Prop_0 as string,",
				"          {Unnamed: 0} as string,",
				"          game_id as string,",
				"          week as string,",
				"          season as string,",
				"          matchup as string,",
				"          pcount as string,",
				"          team as string,",
				"          opponent as string,",
				"          venue as string,",
				"          vegas_wp as string,",
				"          vegas_wpa as string,",
				"          away_team as string,",
				"          home_team as string,",
				"          scorep as string,",
				"          end_q1 as string,",
				"          end_q2 as string,",
				"          end_q3 as string,",
				"          end_q4 as string,",
				"          yards_gained as string,",
				"          yards_allowed as string,",
				"          tw as string,",
				"          d_tw as string,",
				"          {4att} as string,",
				"          off_inred as string,",
				"          missed_ksize as string,",
				"          drive_start as string,",
				"          points_scored as string,",
				"          points_allowed as string,",
				"          min_passed as string,",
				"          in_pos as string,",
				"          yrdln as string,",
				"          play_type as string,",
				"          rush_yards as string,",
				"          d_rush_yards as string,",
				"          pass_yards as string,",
				"          d_pass_yards as string,",
				"          pressures as string,",
				"          d_pressures as string,",
				"          down as string,",
				"          turnover as string,",
				"          off_n_offense_backfield as string,",
				"          d_n_offense_backfield as string,",
				"          off_n_defense_box as string,",
				"          d_n_defense_box as string,",
				"          off_is_no_huddle as string,",
				"          d_is_no_huddle as string,",
				"          off_is_motion as string,",
				"          d_is_motion as string,",
				"          off_is_play_action as string,",
				"          d_is_play_action as string,",
				"          off_is_screen_pass as string,",
				"          d_is_screen_pass as string,",
				"          off_is_rpo as string,",
				"          d_is_rpo as string,",
				"          off_is_trick_play as string,",
				"          d_is_trick_play as string,",
				"          off_is_qb_out_of_pocket as string,",
				"          d_is_qb_out_of_pocket as string,",
				"          off_is_interception_worthy as string,",
				"          d_is_interception_worthy as string,",
				"          off_is_throw_away as string,",
				"          d_is_throw_away as string,",
				"          off_read_thrown as string,",
				"          d_read_thrown as string,",
				"          off_is_catchable_ball as string,",
				"          d_is_catchable_ball as string,",
				"          off_is_contested_ball as string,",
				"          d_is_contested_ball as string,",
				"          off_is_created_reception as string,",
				"          d_is_created_reception as string,",
				"          off_is_drop as string,",
				"          d_is_drop as string,",
				"          off_n_blitzers as string,",
				"          d_n_blitzers as string,",
				"          off_n_pass_rushers as string,",
				"          d_n_pass_rushers as string,",
				"          off_is_qb_fault_sack as string,",
				"          d_is_qb_fault_sack as string,",
				"          {turnover.1} as string,",
				"          d_turnover as string,",
				"          run as string,",
				"          pass as string,",
				"          field_goal as string,",
				"          punt as string,",
				"          punt_dist as string,",
				"          fg_rate as string,",
				"          pat_rate as string,",
				"          off2 as string,",
				"          d_off2 as string,",
				"          fg_blocked as string,",
				"          d_fg_blocked as string,",
				"          punt_blocked as string,",
				"          d_punt_blocked as string,",
				"          ryard as string,",
				"          d_ryard as string,",
				"          pos as string,",
				"          d_pos as string,",
				"          won as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          game_id,",
				"          week_of_season = week,",
				"          season,",
				"          matchup,",
				"          pcount,",
				"          team,",
				"          opponent,",
				"          venue,",
				"          vegas_wp,",
				"          vegas_wpa,",
				"          away_team,",
				"          home_team,",
				"          scorep,",
				"          end_q1,",
				"          end_q2,",
				"          end_q3,",
				"          end_q4,",
				"          yards_gained,",
				"          yards_allowed,",
				"          tw,",
				"          d_tw,",
				"          {4att},",
				"          off_inred,",
				"          missed_ksize,",
				"          drive_start,",
				"          points_scored,",
				"          points_allowed,",
				"          min_passed,",
				"          in_pos,",
				"          yrdln,",
				"          play_type,",
				"          rush_yards,",
				"          d_rush_yards,",
				"          pass_yards,",
				"          d_pass_yards,",
				"          pressures,",
				"          d_pressures,",
				"          down,",
				"          turnover,",
				"          off_n_offense_backfield,",
				"          d_n_offense_backfield,",
				"          off_n_defense_box,",
				"          d_n_defense_box,",
				"          off_is_no_huddle,",
				"          d_is_no_huddle,",
				"          off_is_motion,",
				"          d_is_motion,",
				"          off_is_play_action,",
				"          d_is_play_action,",
				"          off_is_screen_pass,",
				"          d_is_screen_pass,",
				"          off_is_rpo,",
				"          d_is_rpo,",
				"          off_is_trick_play,",
				"          d_is_trick_play,",
				"          off_is_qb_out_of_pocket,",
				"          d_is_qb_out_of_pocket,",
				"          off_is_interception_worthy,",
				"          d_is_interception_worthy,",
				"          off_is_throw_away,",
				"          d_is_throw_away,",
				"          off_read_thrown,",
				"          d_read_thrown,",
				"          off_is_catchable_ball,",
				"          d_is_catchable_ball,",
				"          off_is_contested_ball,",
				"          d_is_contested_ball,",
				"          off_is_created_reception,",
				"          d_is_created_reception,",
				"          off_is_drop,",
				"          d_is_drop,",
				"          off_n_blitzers,",
				"          d_n_blitzers,",
				"          off_n_pass_rushers,",
				"          d_n_pass_rushers,",
				"          off_is_qb_fault_sack,",
				"          d_is_qb_fault_sack,",
				"          {1} = {turnover.1},",
				"          d_turnover,",
				"          run,",
				"          pass,",
				"          field_goal,",
				"          punt,",
				"          punt_dist,",
				"          fg_rate,",
				"          pat_rate,",
				"          off2,",
				"          d_off2,",
				"          fg_blocked,",
				"          d_fg_blocked,",
				"          punt_blocked,",
				"          d_punt_blocked,",
				"          ryard,",
				"          d_ryard,",
				"          pos,",
				"          d_pos,",
				"          won",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(toInteger(week_of_season) >= 1) ~> filter1",
				"filter1 window(over(week_of_season,",
				"          game_id),",
				"     desc(yards_gained, true),",
				"     yg_rank = sum(toInteger(yards_gained))) ~> window1",
				"window1 aggregate(groupBy(week_of_season,",
				"          game_id),",
				"     first_play = first(play_type),",
				"          last_play = last(play_type),",
				"          play_count = count(game_id),",
				"          avg_yards = avg(toInteger(yards_gained))) ~> aggregate1",
				"aggregate1 alterRow(upsertIf(true())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}